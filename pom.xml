<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.joutak</groupId>
    <artifactId>JoupenPlugin</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>LoginPluginForJoutak</name>

    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <jooq.version>3.19.10</jooq.version>
        <hikari.version>5.1.0</hikari.version>
        <mariadb.version>3.4.1</mariadb.version>
        <mapstruct.version>1.6.0</mapstruct.version>
        <liquibase.version>4.27.0</liquibase.version>
    </properties>

    <dependencies>
        <!-- Paper API -->
        <dependency>
            <groupId>io.papermc.paper</groupId>
            <artifactId>paper-api</artifactId>
            <version>1.20.2-R0.1-SNAPSHOT</version>
            <scope>provided</scope>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.34</version>
            <scope>provided</scope>
        </dependency>

        <!-- MapStruct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-mapstruct-binding</artifactId>
            <version>0.2.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- jOOQ -->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>${jooq.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta-extensions-liquibase</artifactId>
            <version>${jooq.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- HikariCP -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${hikari.version}</version>
        </dependency>

        <!-- MariaDB JDBC -->
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>${mariadb.version}</version>
        </dependency>

        <!-- Liquibase -->
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.17.2</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.17.2</version>
        </dependency>

        <!-- SnakeYAML -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>2.2</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.11.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.11.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.12.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>5.12.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.seeseemelk</groupId>
            <artifactId>MockBukkit-v1.20</artifactId>
            <version>3.33.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.t9t.minecraft-rcon-client</groupId>
            <artifactId>minecraft-rcon-client</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.20.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>mariadb</artifactId>
            <version>1.20.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>1.20.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.9</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>2.0.9</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- GMavenPlus: Load config and generate files -->
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>3.0.2</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.groovy</groupId>
                        <artifactId>groovy</artifactId>
                        <version>4.0.23</version>
                    </dependency>
                    <dependency>
                        <groupId>org.yaml</groupId>
                        <artifactId>snakeyaml</artifactId>
                        <version>2.2</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>load-db-config-from-yaml</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <scripts>
                                <script><![CDATA[
import org.yaml.snakeyaml.Yaml
import java.nio.file.*

def cfgPath = Paths.get(project.basedir.toString(), "plugins", "joupen", "config.yml")
def yaml = new Yaml()
def map = [:]
def db = [:]

if (Files.exists(cfgPath)) {
    map = yaml.load(Files.newInputStream(cfgPath)) ?: [:]
    db = (map["database"] instanceof Map) ? map["database"] : [:]
} else {
    println "[WARNING] YAML config not found at ${cfgPath}, using default properties"
}

// Helper: effective = CLI (-Ddatabase.*) -> YAML -> defaults (from <properties>)
def eff = [:]
["url", "user", "password", "driver", "schema"].each { k ->
    def cli = project.properties.getProperty("database.${k}")
    def yml = (db[k] != null ? db[k].toString().trim() : null)
    def dflt = project.properties.getProperty("database.${k}")
    def val = (cli && cli.trim()) ? cli.trim() : (yml && yml.trim() ? yml : dflt)
    if (val != null && val.toString().trim()) {
        project.properties.setProperty("database.${k}", val.toString().trim())
        eff[k] = val.toString().trim()
    }
}

println "[db-props] url=" + (eff.url ?: "<unset>")
println "[db-props] schema=" + (eff.schema ?: "<unset>")
println "[db-props] user=" + (eff.user ?: "<unset>")
println "[db-props] password=" + (eff.password ?: "<unset>")
println "[db-props] driver=" + (eff.driver ?: "<unset>")
]]></script>

                                <!-- Generate jOOQ config -->
                                <script><![CDATA[
import java.nio.file.*

String xmlEscape(String s) {
    if (s == null) return ""
    s.replace("&", "&amp;")
     .replace("<", "&lt;")
     .replace(">", "&gt;")
     .replace("\"", "&quot;")
}

def outDir = Paths.get(project.build.directory)
Files.createDirectories(outDir)
def jooqCfg = outDir.resolve("jooq-config.xml")

def schema = project.properties.getProperty("database.schema", "Joupen") ?: ""

def xml = """<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<configuration>
  <generator>
    <database>
      <name>org.jooq.meta.extensions.liquibase.LiquibaseDatabase</name>
      <properties>
        <property>
          <key>rootPath</key>
          <value>${xmlEscape(project.basedir.toString())}/src/main/resources/db/changelog</value>
        </property>
        <property>
          <key>scripts</key>
          <value>db.changelog-master.yaml</value>
        </property>
        <property>
          <key>includeLiquibaseTables</key>
          <value>false</value>
        </property>
        <property>
          <key>database.liquibaseSchemaName</key>
          <value>${xmlEscape(schema)}</value>
        </property>
        <property>
          <key>changeLogParameters.contexts</key>
          <value>!test</value>
        </property>
      </properties>
      <includes>.*</includes>
      <forcedTypes>
        <forcedType>
          <priority>0</priority>
          <userType>java.lang.Boolean</userType>
          <binding>org.jooq.impl.BooleanToByteBinding</binding>
          <includeExpression>PAID</includeExpression>
          <includeTypes>TINYINT</includeTypes>
          <nullability>ALL</nullability>
          <objectType>ALL</objectType>
        </forcedType>
      </forcedTypes>
    </database>
    <target>
      <packageName>org.joupen.jooq.generated</packageName>
      <directory>${xmlEscape(project.build.directory.toString())}/generated-sources/jooq</directory>
    </target>
    <generate>
      <javaTimeTypes>true</javaTimeTypes>
      <records>true</records>
      <pojos>true</pojos>
      <fluentSetters>true</fluentSetters>
      <defaultSchema>false</defaultSchema>
    </generate>
  </generator>
</configuration>
"""

Files.writeString(jooqCfg, xml)
project.properties.setProperty("jooq.config.file", jooqCfg.toString())
println "[jooq-config] written: " + jooqCfg
]]></script>

                                <!-- Generate liquibase.properties -->
                                <script><![CDATA[
import java.nio.file.*

def outDir = Paths.get(project.build.directory)
Files.createDirectories(outDir)
def lbProps = outDir.resolve("liquibase.properties")

def url = project.properties.getProperty("database.url") ?: ""
def user = project.properties.getProperty("database.user") ?: ""
def pass = project.properties.getProperty("database.password") ?: ""
def driver = project.properties.getProperty("database.driver", "org.mariadb.jdbc.Driver") ?: ""

def content = new StringBuilder()
content << "liquibase.url=${url}\n"
content << "liquibase.username=${user}\n"
content << "liquibase.password=${pass}\n"
content << "liquibase.driver=${driver}\n"
content << "liquibase.changeLogFile=src/main/resources/db/changelog/db.changelog-master.yaml\n"

Files.writeString(lbProps, content.toString())
project.properties.setProperty("liquibase.properties.file", lbProps.toString())
println "[liquibase-properties] written: " + lbProps
println "[liquibase-properties] content:\n" + content.toString()
]]></script>
                            </scripts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.34</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!-- Surefire (Tests) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Tests.java</include>
                        <include>**/*TestCase.java</include>
                    </includes>
                    <testFailureIgnore>false</testFailureIgnore>
                </configuration>
            </plugin>

            <!-- Shade -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>org.joupen.JoupenPlugin</Main-Class>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Resources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-changelog-files</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes/db/changelog</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/db/changelog</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-config-yml</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.testOutputDirectory}/JoupenPlugin</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/JoupenPlugin</directory>
                                    <includes>
                                        <include>config.yml</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-players-json</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes/loginPluginRes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>players.json</include>
                                    </includes>
                                    <filtering>true</filtering>
                                    <excludes>
                                        <exclude>docker-compose/**</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Liquibase -->
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>${liquibase.version}</version>
                <configuration>
                    <propertyFile>${liquibase.properties.file}</propertyFile>
                    <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                    <url>${database.url}</url>
                    <username>${database.user}</username>
                    <password>${database.password}</password>
                    <driver>${database.driver}</driver>
                    <changeLogFile>src/main/resources/db/changelog/db.changelog-master.yaml</changeLogFile>
                    <searchPath>${project.basedir}/src/main/resources/db/changelog</searchPath>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.mariadb.jdbc</groupId>
                        <artifactId>mariadb-java-client</artifactId>
                        <version>${mariadb.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- jOOQ Codegen -->
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>
                <executions>
                    <execution>
                        <id>generate-jooq-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <configurationFile>${jooq.config.file}</configurationFile>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-meta-extensions-liquibase</artifactId>
                        <version>${jooq.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-core</artifactId>
                        <version>${liquibase.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.mariadb.jdbc</groupId>
                        <artifactId>mariadb-java-client</artifactId>
                        <version>${mariadb.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Add generated sources -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.6.0</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>target/generated-sources/jooq</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
                <excludes>
                    <exclude>docker-compose/**</exclude>
                </excludes>
            </resource>
        </resources>
    </build>

    <profiles>
        <profile>
            <id>liquibase-update</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <version>${liquibase.version}</version>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>update</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <propertyFile>${liquibase.properties.file}</propertyFile>
                            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                            <url>${database.url}</url>
                            <username>${database.user}</username>
                            <password>${database.password}</password>
                            <driver>${database.driver}</driver>
                            <changeLogFile>src/main/resources/db/changelog/db.changelog-master.yaml</changeLogFile>
                            <searchPath>${project.basedir}/src/main/resources/db/changelog</searchPath>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.mariadb.jdbc</groupId>
                                <artifactId>mariadb-java-client</artifactId>
                                <version>${mariadb.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>papermc-repo</id>
            <url>https://repo.papermc.io/repository/maven-public/</url>
        </repository>
        <repository>
            <id>sonatype</id>
            <url>https://oss.sonatype.org/content/groups/public/</url>
        </repository>
    </repositories>
</project>